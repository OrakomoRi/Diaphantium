class Logger{constructor(o,e=!1){this.scriptName=o,this.logging=e,this.isDarkMode=window.matchMedia("(prefers-color-scheme: dark)").matches}log(o,e="log"){if(!this.logging)return;const s=this.isDarkMode?{log:"color: white",info:"color: #5ea9ff",warn:"color: #ffa500",error:"color: #ff4c4c",success:"color: #4cff4c",debug:"color: #c77dff"}:{log:"color: black",info:"color: #004085",warn:"color: #856404",error:"color: #721c24",success:"color: #155724",debug:"color: #6a0572"};console.log(`%c${this.scriptName} log:\n%c${o}`,"color: white; font-weight: bold",s[e]||s.log)}logVersionComparison(o,e,s){let i=!1;switch(this.logging||(this.logging=!0,i=!0),o){case 1:this.log(`A new version is available on GitHub: ${s}. Checking for stable version...`,"info");break;case 0:this.log(/[-+]/.test(e)?"You are using some version that is based on the latest stable.":"You are using the latest stable version.","info");break;case-1:this.log("You are using a version newer than the one on GitHub.","warn");break;case-2:this.log("Error comparing versions.","error");break;default:this.log("Default case")}i&&(this.logging=!1),this.log(`Your × GitHub:\n${e} × ${s}`,"info")}enableLogging(){this.logging=!0}disableLogging(){this.logging=!1}}